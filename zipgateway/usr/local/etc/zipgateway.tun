#!/bin/sh

#Setting following variable enables wireless configuration. Do not set/change manually.
WLAN=wlan0
ROUTING_PID=/var/run/zip-routing.pid

case "$1" in
  up)
    ifconfig $TUNDEV | grep "\s*UP" > /dev/null || {
      ifconfig $TUNDEV up
    }
    if [ -z "$WLAN" ]
    then 
      brctl addif br-lan $TUNDEV
      ROUTE_DEV=br-lan
    else
      ROUTE_DEV=$TUNDEV
    fi

    if [ -f $ROUTING_PID ] && ps h `cat $ROUTING_PID` > /dev/null
    then
      kill -9 `cat $ROUTING_PID `
      rm $ROUTING_PID
    fi

    sh -c "while true;
              do
                 pidof zipgateway || break;
                 ip -6 route del $HANPREFIX > /dev/null 2>&1
                 ip -6 route add $HANPREFIX via $LANIP dev $ROUTE_DEV > /dev/null 2>&1
                 if [ \$? -eq 2 ]; then
                      sleep 5;
                      continue;
                 else
                      break;
                 fi;
               done;" &

    echo $! > $ROUTING_PID

    if [ -n "$WLAN" ]; then
        ifconfig $WLAN > /dev/null 2>&1 && {
           ifconfig $TUNDEV promisc
           sysctl -w net.ipv4.ip_forward=1
           sysctl -w net.ipv6.conf.$TUNDEV.accept_ra=2
           TAP0=$(grep "^[[:space:]]*ZipLanGw6*" /usr/local/etc/zipgateway.cfg |awk '{ gsub (" ", "", $0); print}'|sed 's/ZipLanGw6=//')
           ip -6 addr add $TAP0 dev $TUNDEV
           pidof parprouted > /dev/null 2>&1 || {
               /usr/sbin/parprouted $WLAN $TUNDEV
           }
           while true;
           do
               IPADDR=$(/sbin/ip -oneline -family inet addr show dev $WLAN | awk '{ print $4 }' | cut -d'/' -f 1)
               if [ -n "$IPADDR" ]; then
                  /sbin/ip addr add $IPADDR/32 dev $TUNDEV
                  echo "Configured $TUNDEV to have same IP as $WLAN"
                  sysctl -w net.ipv6.conf.$WLAN.accept_ra=2
                  break
               else
                  echo "$WLAN does not have IP assigned. Retrying to add IP to $TUNDEV in 5 seconds"
                  sleep 5
                  continue
               fi
           done;
        }

        pidof udprelay > /dev/null 2>&1 && {
            killall -SIGKILL udprelay
        }

        udprelay -i $TUNDEV -b $WLAN -4 4123 -6 4123 -4 5353 -6 5353 &
        udprelay -i $WLAN -b $TUNDEV  -4 5353 -6 5353 &
        pidof udprelay > /dev/null 2>&1 || {
           echo "UDP Relays could not be started. ZIP Discovery and MDNS browsing will not work"
        }

    fi
    
    exit 0
    ;;
  down)
    ip -6 route del $HANPREFIX via $LANIP
    if [ -n "$WLAN" ]; then
        killall -SIGKILL /usr/sbin/parprouted
    else
        brctl delif br-lan $TUNDEV
    fi
    ;;
esac
